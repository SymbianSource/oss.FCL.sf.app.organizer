// AgnVersit2 Tests

// ImportFileName 	= name of file to import
// CheckFileName	= name of file to check export against.
// ExportFileName	= exported file name.  The file will be generated to OutputDirectory
// OOMTest		= 1 or 0. Out of memory testing on or off.
// OnError		= Continue, Skip, Stop or Leave.  Response to errors during import and export.

// Import files and check files should be located in the same directory (InputDirectory)

[SETTINGS]
InputDirectory	= E:/testing/data/unittest/agnversit2/input/
OutputDirectory = E:/testing/data/unittest/agnversit2/output/

//------------------------------------------------------------------------------

// VERSIT2 TESTS
// =============

// Tests that the property validation filters work in versit2. 
// The values used here are unimportant and may not be valid for agnversit2.

[VERSIT2_FILTER_PROPS]
TestName 	= Versit2 Property Filter Import/Export Test
ImportFileName	= Versit2FilterPropsIn.ics
CheckFileName	= Versit2FilterPropsCheck.ics
ExportFileName	= Versit2FilterPropsOut.ics
OOMTest		= 0

// Tests that component embedding validation filters work in versit2.
// No properties are given, so this would not be a valid test file for agnversit2.

[VERSIT2_FILTER_COMPS]
TestName 	= Versit2 Component Filter Import/Export Test
ImportFileName	= Versit2FilterCompsIn.ics
CheckFileName	= Versit2FilterCompsCheck.ics
ExportFileName	= Versit2FilterCompsOut.ics
OOMTest		= 0

// Tests Versit2 handling of escape sequences, folding, etc.
// The properties used here are not be valid for agnversit2.

[VERSIT2_ESCAPE_SEQ]
TestName 	= Versit2 Escape Sequence Import/Export Test
ImportFileName	= Versit2EscapeSeqIn.ics
CheckFileName	= Versit2EscapeSeqCheck.ics
ExportFileName	= Versit2EscapeSeqOut.ics
OOMTest		= 0

// Tests Versit2 handling of minimal VJournals with each possible method

[VERSIT2_VJOURNAL]
TestName 	= Versit2 VJOURNAL
ImportFileName	= MinimalVJournalIn.ics
CheckFileName	= MinimalVJournalCheck.ics
ExportFileName	= MinimalVJournalOut.ics
OOMTest		= 0

// Tests Versit2 handling of minimal VFreeBusys with each possible method

[VERSIT2_VFREEBUSY]
TestName 	= Versit2 VFREEBUSY
ImportFileName	= MinimalVFreeBusyIn.ics
CheckFileName	= MinimalVFreeBusyCheck.ics
ExportFileName	= MinimalVFreeBusyOut.ics
OOMTest		= 0

// Tests Versit2 handling of a corrupt ics file

[VERSIT2_CORRUPT1]
TestName 	= Versit2 Corrupt 1
ImportFileName	= Corrupt1In.ics
CheckFileName	= Corrupt1Check.ics
ExportFileName	= Corrupt1Out.ics
OOMTest		= 0

// Tests Versit2 handling of a corrupt ics file

[VERSIT2_CORRUPT2]
TestName 	= Versit2 Corrupt 2
ImportFileName	= Corrupt2In.ics
CheckFileName	= Corrupt2Check.ics
ExportFileName	= Corrupt2Out.ics
OOMTest		= 0

// Tests Versit2 handling of a corrupt ics file

[VERSIT2_CORRUPT3]
TestName 	= Versit2 Corrupt 3
ImportFileName	= Corrupt3In.ics
CheckFileName	= Corrupt3Check.ics
ExportFileName	= Corrupt3Out.ics
OOMTest		= 0

// Tests Versit2 handling of an ics file which isn't
// syntatically corrupt, but is borderline in several ways.

[VERSIT2_NOT_CORRUPT]
TestName 	= Versit2 Not Corrupt
ImportFileName	= NotCorruptIn.ics
CheckFileName	= NotCorruptCheck.ics
ExportFileName	= NotCorruptOut.ics
OOMTest		= 0

// There is no point in testing these as "required" behaviour, but 
// Versit2 will leave under the the following conditions:
// *	If the line length is greater than 100.
// *	If EOF is found when skipping a component.
// *	BEGIN: is found with an unknown component (including extra characters or whitespace on the end of a known component).
// *	The END: found doesn't match the corresponding begin.
// *	The lines do not end with LF (e.g. CR is used instead of CRLF).

// Note that all agnversit2 tests also implicitly test versit2 functionality.

//------------------------------------------------------------------------------

// AGNVERSIT2 TESTS
// ================

// Tests that a simple VEVENT is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT]
TestName 	= Simple VEvent Import / Export Test
ImportFileName	= SimpleVeventIn.ics
CheckFileName	= SimpleVeventCheck.ics
ExportFileName1	= SimpleVeventOut1.ics
ExportFileName2	= SimpleVeventOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with an ATTENDEE property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_ATTENDEE]
TestName 	= Simple VEvent Attendee
ImportFileName	= SimpleVeventAttendeeIn.ics
CheckFileName	= SimpleVeventAttendeeCheck.ics
ExportFileName1	= SimpleVeventAttendeeOut1.ics
ExportFileName2	= SimpleVeventAttendeeOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with a CATEGORIES property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_CATEGORIES]
TestName 	= Simple VEvent Categories
ImportFileName	= SimpleVeventCategoriesIn.ics
CheckFileName	= SimpleVeventCategoriesCheck.ics
ExportFileName1	= SimpleVeventCategoriesOut1.ics
ExportFileName2	= SimpleVeventCategoriesOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with a DESCRIPTION property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_DESCRIPTION]
TestName 	= Simple VEvent Description
ImportFileName	= SimpleVeventDescriptionIn.ics
CheckFileName	= SimpleVeventDescriptionCheck.ics
ExportFileName1	= SimpleVeventDescriptionOut1.ics
ExportFileName2	= SimpleVeventDescriptionOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with a DURATION property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_DURATION]
TestName 	= Simple VEvent Duration
ImportFileName	= SimpleVeventDurationIn.ics
CheckFileName	= SimpleVeventDurationCheck.ics
ExportFileName1	= SimpleVeventDurationOut1.ics
ExportFileName2	= SimpleVeventDurationOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with an EXDATE property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_EXDATE]
TestName 	= Simple VEvent ExDate
ImportFileName	= SimpleVeventExDateIn.ics
CheckFileName	= SimpleVeventExDateCheck.ics
ExportFileName1	= SimpleVeventExDateOut1.ics
ExportFileName2	= SimpleVeventExDateOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with a LAST-MODIFIED property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.
// Note that the value of the LAST-MODIFIED property is ignored by the check!!

[SIMPLE_VEVENT_LASTMOD]
TestName 	= Simple VEvent Last Modified
ImportFileName	= SimpleVeventLastModIn.ics
CheckFileName	= SimpleVeventLastModCheck.ics
ExportFileName1	= SimpleVeventLastModOut1.ics
ExportFileName2	= SimpleVeventLastModOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with a LOCATION property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_LOCATION]
TestName 	= Simple VEvent Location
ImportFileName	= SimpleVeventLocationIn.ics
CheckFileName	= SimpleVeventLocationCheck.ics
ExportFileName1	= SimpleVeventLocationOut1.ics
ExportFileName2	= SimpleVeventLocationOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with an ORGANIZER property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_ORGANIZER]
TestName 	= Simple VEvent Organizer
ImportFileName	= SimpleVeventOrganizerIn.ics
CheckFileName	= SimpleVeventOrganizerCheck.ics
ExportFileName1	= SimpleVeventOrganizerOut1.ics
ExportFileName2	= SimpleVeventOrganizerOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with an RDATE property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_RDATE]
TestName 	= Simple VEvent RDate
ImportFileName	= SimpleVeventRDateIn.ics
CheckFileName	= SimpleVeventRDateCheck.ics
ExportFileName1	= SimpleVeventRDateOut1.ics
ExportFileName2	= SimpleVeventRDateOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with a RECURID property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_RECURID]
TestName 	= Simple VEvent RecurId
ImportFileName	= SimpleVeventRecurIdIn.ics
CheckFileName	= SimpleVeventRecurIdCheck.ics
ExportFileName1	= SimpleVeventRecurIdOut1.ics
ExportFileName2	= SimpleVeventRecurIdOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with an RRULE property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_RRULE]
TestName 	= Simple VEvent RRule
ImportFileName	= SimpleVeventRRuleIn.ics
CheckFileName	= SimpleVeventRRuleCheck.ics
ExportFileName1	= SimpleVeventRRuleOut1.ics
ExportFileName2	= SimpleVeventRRuleOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with a SEQUENCE property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_SEQUENCE]
TestName 	= Simple VEvent Sequence
ImportFileName	= SimpleVeventSequenceIn.ics
CheckFileName	= SimpleVeventSequenceCheck.ics
ExportFileName1	= SimpleVeventSequenceOut1.ics
ExportFileName2	= SimpleVeventSequenceOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with a STATUS property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_STATUS]
TestName 	= Simple VEvent Status
ImportFileName	= SimpleVeventStatusIn.ics
CheckFileName	= SimpleVeventStatusCheck.ics
ExportFileName1	= SimpleVeventStatusOut1.ics
ExportFileName2	= SimpleVeventStatusOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a simple VEVENT with a SUMMARY property is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[SIMPLE_VEVENT_SUMMARY]
TestName 	= Simple VEvent Summary
ImportFileName	= SimpleVeventSummaryIn.ics
CheckFileName	= SimpleVeventSummaryCheck.ics
ExportFileName1	= SimpleVeventSummaryOut1.ics
ExportFileName2	= SimpleVeventSummaryOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a VEVENT with a time zone is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[VEVENT_RRULE_TZ]
TestName 	= VEvent RRule with TimeZone
ImportFileName	= VEVentRRuleIn.ics
CheckFileName	= VEVentRRuleCheck.ics
ExportFileName1	= VEVentRRuleOut1.ics
ExportFileName2	= VEVentRRuleOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that a repeating VEVENT generated by Outlook is imported and exported correctly by agnversit2.
// The output is compared to a known check file.

[OUTLOOK_ALLDAY_REPEAT_WEEKLY]
TestName 	= Outlook generated all day event, repeating weekly for 10 weeks
ImportFileName	= OutlookAllDayRepeatWeeklyIn.ics
CheckFileName	= OutlookAllDayRepeatWeeklyCheck.ics
ExportFileName1	= OutlookAllDayRepeatWeeklyOut1.ics
ExportFileName2	= OutlookAllDayRepeatWeeklyOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that an iCalendar with known defects is imported and exported correctly by agnversit2.
// For each defect the observer function returns "Continue". This causes agnversit2 to try and recover
// by either ignoring the property or creating a default value. In some cases it will not be possible to 
// continue and the whole component will be skipped.
// The output is compared to a known check file.

[NOTSUPPORTED_CONTINUE]
TestName	= Data Not Supported->Continue Test
ImportFileName	= NotSupportedIn.ics
CheckFileName	= NotSupportedContinueCheck.ics
ExportFileName1	= NotSupportedContinueOut1.ics
ExportFileName2	= NotSupportedContinueOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that an iCalendar with known defects is imported and exported correctly by agnversit2.
// For each defect the observer function returns "Skip". This causes agnversit2 to ignore the whole component.
// The output is compared to a known check file.

[NOTSUPPORTED_SKIP]
TestName	= Data Not Supported->Skip Test
ImportFileName	= NotSupportedIn.ics
CheckFileName	= NotSupportedSkipCheck.ics
ExportFileName1	= NotSupportedSkipOut1.ics
ExportFileName2	= NotSupportedSkipOut2.ics
OnError		= Skip
OOMTest		= 0

// Tests that an iCalendar with known defects is imported and exported correctly by agnversit2.
// For each defect the observer function returns "Stop". This causes agnversit2 to return quietly at that point.
// The output is compared to a known check file.

[NOTSUPPORTED_STOP]
TestName	= Data Not Supported->Stop Test
ImportFileName	= NotSupportedIn.ics
CheckFileName	= NotSupportedStopCheck.ics
ExportFileName1	= NotSupportedStopOut1.ics
ExportFileName2	= NotSupportedStopOut2.ics
OnError		= Stop
OOMTest		= 0

// Tests that an iCalendar with known defects is imported and exported correctly by agnversit2.
// For each defect the observer function returns "Leave".  This causes agnversit2 to leave at that point.
// The output is compared to a known check file.

[NOTSUPPORTED_LEAVE]
TestName	= Data Not Supported->Leave Test
ImportFileName	= NotSupportedIn.ics
CheckFileName	= NotSupportedLeaveCheck.ics
ExportFileName1	= NotSupportedLeaveOut1.ics
ExportFileName2	= NotSupportedLeaveOut2.ics
OnError		= Leave
OOMTest		= 0

// Tests that an iCalendar with known defects is imported and exported correctly by agnversit2.
// For each defect the observer function returns "Leave".  This causes agnversit2 to leave at that point.
// The output is compared to a known check file.

[NOTSUPPORTED_DIE]
TestName	= Data Not Supported->Die Test
ImportFileName	= NotSupportedIn.ics
CheckFileName	= NotSupportedDieCheck.ics
ExportFileName1	= NotSupportedDieOut1.ics
ExportFileName2	= NotSupportedDieOut2.ics
OnError		= Die
OOMTest		= 0

// Tests that an iCalendar with an RRULE containing both numbered and unnumbered days is inported and 
// exported correctly by agnversit2 with a frequency of weekly

[RRULE_NUMBERING_WEEKLY]
TestName	= RRule with Numbered and Un Numbered BYDAY FREQ=WEEKLY
ImportFileName	= RRuleNumberingWeeklyIn.ics
CheckFileName	= RRuleNumberingWeeklyCheck.ics
ExportFileName1	= RRuleNumberingWeeklyOut1.ics
ExportFileName2	= RRuleNumberingWeeklyOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that an iCalendar with an RRULE containing both numbered and unnumbered days is inported and 
// exported correctly by agnversit2 with a frequency of monthly

[RRULE_NUMBERING_MONTHLY]
TestName	= RRule with Numbered and Un Numbered BYDAY FREQ=MONTHLY
ImportFileName	= RRuleNumberingMonthlyIn.ics
CheckFileName	= RRuleNumberingMonthlyCheck.ics
ExportFileName1	= RRuleNumberingMonthlyOut1.ics
ExportFileName2	= RRuleNumberingMonthlyOut2.ics
OnError		= Continue
OOMTest		= 0

// Tests that an iCalendar with an RRULE containing both numbered and unnumbered days is inported and 
// exported correctly by agnversit2 with a frequency of yearly

[RRULE_NUMBERING_YEARLY]
TestName	= RRule with Numbered and Un Numbered BYDAY FREQ=YEARLY
ImportFileName	= RRuleNumberingYearlyIn.ics
CheckFileName	= RRuleNumberingYearlyCheck.ics
ExportFileName1	= RRuleNumberingYearlyOut1.ics
ExportFileName2	= RRuleNumberingYearlyOut2.ics
OnError		= Continue
OOMTest		= 0

//------------------------------------------------------------------------------

// iTip Method Tests
// =================

[VEVENT_ITIP_PUBLISH]
TestName	= VEvent with iTip method PUBLISH
ImportFileName	= VEventPublishIn.ics
CheckFileName	= VEventPublishCheck.ics
ExportFileName	= VEventPublishOut.ics
OnError		= Continue
OOMTest		= 0

[VEVENT_ITIP_REQUEST]
TestName	= VEvent with iTip method REQUEST
ImportFileName	= VEventRequestIn.ics
CheckFileName	= VEventRequestCheck.ics
ExportFileName	= VEventRequestOut.ics
OnError		= Continue
OOMTest		= 0

[VEVENT_ITIP_REPLY]
TestName	= VEvent with iTip method REPLY
ImportFileName	= VEventReplyIn.ics
CheckFileName	= VEventReplyCheck.ics
ExportFileName	= VEventReplyOut.ics
OnError		= Continue
OOMTest		= 0

[VEVENT_ITIP_ADD]
TestName	= VEvent with iTip method ADD
ImportFileName	= VEventAddIn.ics
CheckFileName	= VEventAddCheck.ics
ExportFileName	= VEventAddOut.ics
OnError		= Continue
OOMTest		= 0

[VEVENT_ITIP_CANCEL]
TestName	= VEvent with iTip method CANCEL
ImportFileName	= VEventCancelIn.ics
CheckFileName	= VEventCancelCheck.ics
ExportFileName	= VEventCancelOut.ics
OnError		= Continue
OOMTest		= 0

[VEVENT_ITIP_REFRESH]
TestName	= VEvent with iTip method REFRESH
ImportFileName	= VEventRefreshIn.ics
CheckFileName	= VEventRefreshCheck.ics
ExportFileName	= VEventRefreshOut.ics
OnError		= Continue
OOMTest		= 0

[VEVENT_ITIP_COUNTER]
TestName	= VEvent with iTip method COUNTER
ImportFileName	= VEventCounterIn.ics
CheckFileName	= VEventCounterCheck.ics
ExportFileName	= VEventCounterOut.ics
OnError		= Continue
OOMTest		= 0

[VEVENT_ITIP_DECLINECOUNTER]
TestName	= VEvent with iTip method DECLINECOUNTER
ImportFileName	= VEventDeclineCounterIn.ics
CheckFileName	= VEventDeclineCounterCheck.ics
ExportFileName	= VEventDeclineCounterOut.ics
OnError		= Continue
OOMTest		= 0

[VTODO_ITIP_PUBLISH]
TestName	= VTodo with iTip method PUBLISH
ImportFileName	= VTodoPublishIn.ics
CheckFileName	= VTodoPublishCheck.ics
ExportFileName	= VTodoPublishOut.ics
OnError		= Continue
OOMTest		= 0

[VTODO_ITIP_REQUEST]
TestName	= VTodo with iTip method REQUEST
ImportFileName	= VTodoRequestIn.ics
CheckFileName	= VTodoRequestCheck.ics
ExportFileName	= VTodoRequestOut.ics
OnError		= Continue
OOMTest		= 0

[VTODO_ITIP_REPLY]
TestName	= VTodo with iTip method REPLY
ImportFileName	= VTodoReplyIn.ics
CheckFileName	= VTodoReplyCheck.ics
ExportFileName	= VTodoReplyOut.ics
OnError		= Continue
OOMTest		= 0

[VTODO_ITIP_ADD]
TestName	= VTodo with iTip method ADD
ImportFileName	= VTodoAddIn.ics
CheckFileName	= VTodoAddCheck.ics
ExportFileName	= VTodoAddOut.ics
OnError		= Continue
OOMTest		= 0

[VTODO_ITIP_CANCEL]
TestName	= VTodo with iTip method CANCEL
ImportFileName	= VTodoCancelIn.ics
CheckFileName	= VTodoCancelCheck.ics
ExportFileName	= VTodoCancelOut.ics
OnError		= Continue
OOMTest		= 0

[VTODO_ITIP_REFRESH]
TestName	= VTodo with iTip method REFRESH
ImportFileName	= VTodoRefreshIn.ics
CheckFileName	= VTodoRefreshCheck.ics
ExportFileName	= VTodoRefreshOut.ics
OnError		= Continue
OOMTest		= 0

[VTODO_ITIP_COUNTER]
TestName	= VTodo with iTip method COUNTER
ImportFileName	= VTodoCounterIn.ics
CheckFileName	= VTodoCounterCheck.ics
ExportFileName	= VTodoCounterOut.ics
OnError		= Continue
OOMTest		= 0

[VTODO_ITIP_DECLINECOUNTER]
TestName	= VTodo with iTip method DECLINECOUNTER
ImportFileName	= VTodoDeclineCounterIn.ics
CheckFileName	= VTodoDeclineCounterCheck.ics
ExportFileName	= VTodoDeclineCounterOut.ics
OnError		= Continue
OOMTest		= 0


//------------------------------------------------------------------------------

// Not iCal tests - should leave with KErrCorrupt (-20)
// ====================================================
[NOT_AN_ICAL]
TestName	= Not An iCal file
ImportFileName	= NotAniCal.bmp
CheckFileName	= Empty.ics
ExportFileName	= NoOutput.ics
OnError		= Continue
OOMTest		= 0


//------------------------------------------------------------------------------

// Tests for code coverage

[RRULE_TZ_ALL_DAYS_FROM_INT]
TestName	= Testing AgnVersit2Exporter::DayFromIntL
ImportFileName	= RRuleTzAllDaysFromIntIn.ics
CheckFileName	= RRuleTzAllDaysFromIntCheck.ics
ExportFileName1	= RRuleTzAllDaysFromIntOut1.ics
ExportFileName2	= RRuleTzAllDaysFromIntOut2.ics
OnError	= Continue

[FLOATING_TIME]
TestName	= Floating time
ImportFileName	= FloatingTimeIn.ics
CheckFileName	= FloatingTimeCheck.ics
ExportFileName1	= FloatingTimeOut1.ics
ExportFileName2	= FloatingTimeOut2.ics
OnError	= Continue

[ADD_ANNIVERSARY]
TestName	= Add Anniversary
ImportFileName	= AddAnniversaryIn.ics
CheckFileName	= AddAnniversaryCheck.ics
ExportFileName1	= AddAnniversaryOut1.ics
ExportFileName2	= AddAnniversaryOut2.ics
OnError	= Continue

[ALL_CATEGORIES]
TestName	= All Categories
ImportFileName	= AllCategoriesIn.ics
CheckFileName	= AllCategoriesCheck.ics
ExportFileName1	= AllCategoriesOut1.ics
ExportFileName2	= AllCategoriesOut2.ics
OnError	= Continue

[ATTENDEE_ROLE_STATUS]
TestName	= Attendee Role Status
ImportFileName	= AttendeeRoleStatusIn.ics
CheckFileName	= AttendeeRoleStatusCheck.ics
ExportFileName1	= AttendeeRoleStatusOut1.ics
ExportFileName2	= AttendeeRoleStatusOut2.ics
OnError	= Continue

[VEVENT_STATUS]
TestName	= Event Status
ImportFileName	= VEventStatusIn.ics
CheckFileName	= VEventStatusCheck.ics
ExportFileName1	= VEventStatusOut1.ics
ExportFileName2	= VEventStatusOut2.ics
OnError	= Continue

[VTODO_STATUS]
TestName	= Todo Status
ImportFileName	= VTodoStatusIn.ics
CheckFileName	= VTodoStatusCheck.ics
ExportFileName1	= VTodoStatusOut1.ics
ExportFileName2	= VTodoStatusOut2.ics
OnError	= Continue

